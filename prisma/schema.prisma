generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  email     String   @unique
  password  String
  author    Author?
}

model Author {
  id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String    @db.VarChar(255)
  photo    String?
  likes    Like[]
  posts    Post[]
  comments Comment[]
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @unique @db.Uuid
}

model Post {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  image     String
  text      String
  likes     Like[]
  comments  Comment[]
  authorId  String    @db.Uuid
  author    Author    @relation(fields: [authorId], references: [id])
}

model Comment {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  text      String
  likes     Like[]
  authorId  String   @db.Uuid
  author    Author   @relation(fields: [authorId], references: [id])
  postId    String   @db.Uuid
  post      Post     @relation(fields: [postId], references: [id])
}

model Like {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  datetime  DateTime
  authorId  String   @db.Uuid
  author    Author   @relation(fields: [authorId], references: [id])
  postId    String?  @db.Uuid
  post      Post?    @relation(fields: [postId], references: [id])
  commentId String?  @db.Uuid
  comment   Comment? @relation(fields: [commentId], references: [id])
}
